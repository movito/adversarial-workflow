#!/bin/bash

# Interactive Claude Agent Selector for Notionally
# Usage: claude-agent

AGENTS_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Clear screen and show header
clear
echo -e "${CYAN}╔════════════════════════════════════════╗${NC}"
echo -e "${CYAN}║   Notionally Agent Selector v2.0.0    ║${NC}"
echo -e "${CYAN}╚════════════════════════════════════════╝${NC}"
echo

# Show available agents
echo -e "${GREEN}Select an agent role:${NC}"
echo
echo -e "  ${YELLOW}1${NC}) ${BLUE}Security Reviewer${NC}"
echo -e "     └─ Audit for vulnerabilities & security issues"
echo
echo -e "  ${YELLOW}2${NC}) ${BLUE}Code Reviewer${NC}"
echo -e "     └─ Check code quality & best practices"
echo
echo -e "  ${YELLOW}3${NC}) ${BLUE}Feature Developer${NC}"
echo -e "     └─ Implement features & fix bugs"
echo
echo -e "  ${YELLOW}4${NC}) ${BLUE}Test Runner${NC}"
echo -e "     └─ Execute tests & verify functionality"
echo
echo -e "  ${YELLOW}5${NC}) ${BLUE}Multiple Agents${NC}"
echo -e "     └─ Combine multiple agent contexts"
echo
echo -e "  ${YELLOW}q${NC}) Quit"
echo

# Get user choice
echo -ne "${GREEN}Enter your choice [1-5/q]: ${NC}"
read -n 1 choice
echo

# Map choices to agent files
case $choice in
    1)
        AGENT="security-reviewer"
        echo -e "\n${CYAN}🔒 Launching Security Reviewer...${NC}\n"
        ;;
    2)
        AGENT="code-reviewer"
        echo -e "\n${CYAN}📝 Launching Code Reviewer...${NC}\n"
        ;;
    3)
        AGENT="feature-developer"
        echo -e "\n${CYAN}🚀 Launching Feature Developer...${NC}\n"
        ;;
    4)
        AGENT="test-runner"
        echo -e "\n${CYAN}🧪 Launching Test Runner...${NC}\n"
        ;;
    5)
        # Multiple agents selection
        echo -e "\n${GREEN}Select agents to combine (e.g., 12 for Security + Code):${NC}"
        echo -e "  1) Security Reviewer"
        echo -e "  2) Code Reviewer"
        echo -e "  3) Feature Developer"
        echo -e "  4) Test Runner"
        echo -ne "\n${GREEN}Enter choices: ${NC}"
        read choices

        COMBINED_ROLE="You are acting as multiple agent roles for Notionally: "
        [[ $choices == *"1"* ]] && COMBINED_ROLE="${COMBINED_ROLE}Security Reviewer (vulnerabilities, validation, CORS). "
        [[ $choices == *"2"* ]] && COMBINED_ROLE="${COMBINED_ROLE}Code Reviewer (quality, patterns, performance). "
        [[ $choices == *"3"* ]] && COMBINED_ROLE="${COMBINED_ROLE}Feature Developer (implementation, testing, fixes). "
        [[ $choices == *"4"* ]] && COMBINED_ROLE="${COMBINED_ROLE}Test Runner (testing, verification, edge cases). "

        echo -e "\n${CYAN}🔄 Launching multiple agents...${NC}\n"
        exec claude --append-system-prompt "$COMBINED_ROLE"
        ;;
    q|Q)
        echo -e "\n${YELLOW}Exiting...${NC}"
        exit 0
        ;;
    *)
        echo -e "\n${RED}Invalid choice. Exiting...${NC}"
        exit 1
        ;;
esac

# Launch Claude with the selected agent context
if [ -n "$AGENT" ]; then
    # Extract the role description from the agent script
    ROLE_DESC=$(grep -A 30 "AGENT ROLE:" "$AGENTS_DIR/${AGENT}.sh" | sed 's/^#//' | head -20)

    # Create a focused system prompt for the agent
    case $AGENT in
        security-reviewer)
            ROLE="You are a security reviewer agent for Notionally. Focus on: auditing for vulnerabilities, input validation, CORS/CSP policies, injection attacks, rate limiting, and sensitive data exposure. Review code with security as the top priority. Check /coordination/tasks/pending/ for security tasks."
            ;;
        code-reviewer)
            ROLE="You are a code reviewer agent for Notionally. Focus on: code structure, patterns, performance, error handling, test coverage, and following v2.0.0 modular architecture. Ensure code quality and maintainability. Check /coordination/tasks/pending/ for review tasks."
            ;;
        feature-developer)
            ROLE="You are a feature developer agent for Notionally. Focus on: implementing features, fixing bugs, writing tests, following existing patterns, and making small incremental changes. Always test before committing. Maintain backward compatibility. Check /coordination/tasks/pending/ for development tasks."
            ;;
        test-runner)
            ROLE="You are a test runner agent for Notionally. Focus on: executing test suites, integration testing, edge cases, load testing, and verifying fixes. Run test-critical.sh and ensure all tests pass. Check /coordination/tasks/pending/ for testing tasks."
            ;;
    esac

    exec claude --append-system-prompt "$ROLE"
fi
